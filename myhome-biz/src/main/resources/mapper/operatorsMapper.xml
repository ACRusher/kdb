<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kdb.dao.mapper.OperatorsMapper">

    <resultMap id="Operators" type="com.kdb.model.Operators">
        <result column="id" property="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
        <result column="gmt_create" property="gmtCreate" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result column="gmt_modify" property="gmtModify" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result column="name" property="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="code" property="code" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="logo" property="logo" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="extra" property="extra" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="period" property="period" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="fee" property="fee" javaType="java.lang.Integer" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="allColumns">
        id , gmt_create , gmt_modify ,
        name , code , logo , extra ,
        period ,fee
    </sql>

    <insert id="insert" parameterType="com.kdb.model.Operators">
        insert into operators (
        <include refid="allColumns"/>
        ) VALUES (
        #{id} , #{gmtCreate} , #{gmtModify},
        #{name} , #{code} ,#{logo} , #{extra} ,
        #{period} , #{fee}
        )
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT last_insert_id() as id
        </selectKey>
    </insert>

    <update id="update" parameterType="com.kdb.model.Operators">
        UPDATE operators
        <set>
            <if test="gmtCreate!=null">
                gmt_create = #{gmtCreate} ,
            </if>
            <if test="gmtModify!=null">
                gmt_modify = #{gmtModify} ,
            </if>
            <if test="name!=null">
                name = #{name},
            </if>
            <if test="code!=null">
                code = #{code},
            </if>
            <if test="logo!=null">
                logo = #{logo},
            </if>
            <if test="extra!=null">
                extra = #{extra},
            </if>
            <if test="period!=null">
                period = #{period},
            </if>
            <if test="fee!=null">
                fee = #{fee},
            </if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>


    <delete id="deleteById" parameterType="java.lang.Long">
        delete from operators
        <where>
            id = #{id}
        </where>
    </delete>

    <select id="getByCondition" parameterType="java.util.Map" resultMap="Operators">
        SELECT
        <include refid="allColumns"/>
        FROM operators
        <where>
            <foreach collection="_where_key" item="andList" separator="or" open="(" close=")">
                <foreach collection="andList" item="filter" open="(" close=")" separator="and">
                    <choose>
                        <when test="filter.LT()">
                            <![CDATA[
              ${filter.column} < #{filter.value}
              ]]>
                        </when>
                        <when test="filter.LE()">
                            <![CDATA[
              ${filter.column} <= #{filter.value}
              ]]>
                        </when>
                        <when test="filter.GT()">
                            <![CDATA[
              ${filter.column} > #{filter.value}
              ]]>
                        </when>
                        <when test="filter.GE()">
                            <![CDATA[
              ${filter.column} >= #{filter.value}
              ]]>
                        </when>
                        <when test="filter.EQ()">
                            <![CDATA[
              ${filter.column} = #{filter.value}
              ]]>
                        </when>
                        <when test="filter.LIKE()">
                            <![CDATA[
              ${filter.column} LIKE #{filter.value}
              ]]>
                        </when>
                    </choose>
                </foreach>
            </foreach>
        </where>
        <if test="_order_map_list != null">
            <trim prefix="order by " suffix=" " suffixOverrides=",">
                <foreach collection="_order_map_list" item="orderMap" index="index" separator=" ">
                    <if test="orderMap._asc_ !=null">
                        ${orderMap._column_name} ASC ,
                    </if>
                    <if test="orderMap._desc_ !=null">
                        ${orderMap._column_name} DESC ,
                    </if>
                </foreach>
            </trim>
        </if>
        <if test="_limit_offset !=null and _limit_total !=null ">
            LIMIT ${_limit_offset} , ${_limit_total}
        </if>
    </select>
</mapper>