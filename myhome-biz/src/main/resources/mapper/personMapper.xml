<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kdb.dao.mapper.PersonMapper">

    <resultMap id="Person" type="com.kdb.vo.Person">
        <result column="id" property="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
        <result column="name" property="name"  javaType="java.lang.String" jdbcType="VARCHAR" />
        <result column="age" property="age" javaType="java.lang.Integer" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="allColumns">
        id,name,age
    </sql>



    <select id="getByCondition" parameterType="java.util.Map" resultMap="Person">
        SELECT <include refid="allColumns" />
        FROM person
        <where>
            <foreach collection="_where_key" item="andList" separator="or" open="(" close=")">
                <foreach collection="andList" item="filter" open="(" close=")" separator="and" >
                    <choose>
                        <when test="filter.LT()">
                            <![CDATA[
              ${filter.column} < #{filter.value}
              ]]>
                        </when>
                        <when test="filter.LE()">
                            <![CDATA[
              ${filter.column} <= #{filter.value}
              ]]>
                        </when>
                        <when test="filter.GT()">
                            <![CDATA[
              ${filter.column} > #{filter.value}
              ]]>
                        </when>
                        <when test="filter.GE()">
                            <![CDATA[
              ${filter.column} >= #{filter.value}
              ]]>
                        </when>
                        <when test="filter.EQ()">
                            <![CDATA[
              ${filter.column} = #{filter.value}
              ]]>
                        </when>
                        <when test="filter.LIKE()">
                            <![CDATA[
              ${filter.column} LIKE #{filter.value}
              ]]>
                        </when>
                    </choose>
                </foreach>
            </foreach>
        </where>
        <if test="_order_map_list != null">
            <trim prefix="order by " suffix=" " suffixOverrides=",">
                <foreach collection="_order_map_list" item="orderMap" index="index" separator=" ">
                    <if test="orderMap._asc_ !=null">
                        ${orderMap._column_name} ASC ,
                    </if>
                    <if test="orderMap._desc_ !=null">
                        ${orderMap._column_name} DESC ,
                    </if>
                </foreach>
            </trim>
        </if>
        <if test="_limit_offset !=null and _limit_total !=null ">
            LIMIT ${_limit_offset} , ${_limit_total}
        </if>
    </select>


</mapper>