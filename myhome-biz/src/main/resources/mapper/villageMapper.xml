<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kdb.dao.mapper.VillageMapper">

    <resultMap id="Village" type="com.kdb.model.Village">
        <result column="id" property="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
        <result column="gmt_create" property="gmtCreate" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result column="gmt_modify" property="gmtModify" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result column="province" property="province" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="city" property="city" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="area" property="area" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="street" property="street" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="village" property="village" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="operators" property="operators" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="allColumns">
        id ,gmt_create , gmt_modify ,
        province , city , area,
        street ,village ,operators
    </sql>

    <insert id="insert" parameterType="com.kdb.model.Village">
        insert into village(
        <include refid="allColumns"/>
        )VALUES (
        #{id} , #{gmtCreate} , #{gmtModify},
        #{province} ,#{city} ,#{area},
        #{street} ,#{village} ,#{operators}
        )
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT last_insert_id() as id
        </selectKey>
    </insert>

    <update id="update" parameterType="com.kdb.model.Village">
        update village
        <set>
            <if test="gmtCreate!=null">
                gmt_create = #{gmtCreate} ,
            </if>
            <if test="gmtModify!=null">
                gmt_modify = #{gmtModify} ,
            </if>
            <if test="province!=null">
                province = #{province},
            </if>
            <if test="city!=null">
                city = #{city},
            </if>
            <if test="area!=null">
                area = #{area},
            </if>
            <if test="street!=null">
                street = #{street},
            </if>
            <if test="village!=null">
                village = #{village},
            </if>
            <if test="operators!=null">
                operators = #{operators},
            </if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="deleteById" parameterType="java.lang.Long" >
        delete from village
        <where>
            id = #{id}
        </where>
    </delete>

    <select id="getByCondition" parameterType="java.util.Map" resultMap="Village">
                SELECT
                <include refid="allColumns"/>
                FROM village
                <where>
                        <foreach collection="_where_key" item="andList" separator="or" open="(" close=")">
                                <foreach collection="andList" item="filter" open="(" close=")" separator="and">
                                        <choose>
                                                <when test="filter.LT()">
                                                        <![CDATA[
              ${filter.column} < #{filter.value}
              ]]>
                                                </when>
                                                <when test="filter.LE()">
                                                        <![CDATA[
              ${filter.column} <= #{filter.value}
              ]]>
                                                </when>
                                                <when test="filter.GT()">
                                                        <![CDATA[
              ${filter.column} > #{filter.value}
              ]]>
                                                </when>
                                                <when test="filter.GE()">
                                                        <![CDATA[
              ${filter.column} >= #{filter.value}
              ]]>
                                                </when>
                                                <when test="filter.EQ()">
                                                        <![CDATA[
              ${filter.column} = #{filter.value}
              ]]>
                                                </when>
                                                <when test="filter.LIKE()">
                                                        <![CDATA[
              ${filter.column} LIKE #{filter.value}
              ]]>
                                                </when>
                                        </choose>
                                </foreach>
                        </foreach>
                </where>
                <if test="_order_map_list != null">
                        <trim prefix="order by " suffix=" " suffixOverrides=",">
                                <foreach collection="_order_map_list" item="orderMap" index="index" separator=" ">
                                        <if test="orderMap._asc_ !=null">
                                                ${orderMap._column_name} ASC ,
                                        </if>
                                        <if test="orderMap._desc_ !=null">
                                                ${orderMap._column_name} DESC ,
                                        </if>
                                </foreach>
                        </trim>
                </if>
                <if test="_limit_offset !=null and _limit_total !=null ">
                        LIMIT ${_limit_offset} , ${_limit_total}
                </if>
        </select>
</mapper>