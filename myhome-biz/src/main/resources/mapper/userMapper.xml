<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kdb.dao.mapper.UserMapper">

    <resultMap id="User" type="com.kdb.model.User">
        <result column="id" property="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
        <result column="gmt_create" property="gmtCreate" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result column="gmt_modify" property="gmtModify" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result column="name" property="name"  javaType="java.lang.String" jdbcType="VARCHAR" />
        <result column="age" property="age" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result column="identity_id" property="identityId"  javaType="java.lang.String" jdbcType="VARCHAR" />
        <result column="phone" property="phone"  javaType="java.lang.String" jdbcType="VARCHAR" />
        <result column="address" property="address"  javaType="java.lang.String" jdbcType="VARCHAR" />
        <result column="password" property="password"  javaType="java.lang.String" jdbcType="VARCHAR" />
        <result column="head_picture" property="headPicture"  javaType="java.lang.String" jdbcType="VARCHAR" />
        <result column="nick" property="nick"  javaType="java.lang.String" jdbcType="VARCHAR" />
        <result column="operator_id" property="operatorId"  javaType="java.lang.Long" jdbcType="BIGINT" />
        <result column="village_id" property="villageId"  javaType="java.lang.Long" jdbcType="BIGINT" />
    </resultMap>

    <sql id="allColumns">
        id,gmt_create,gmt_modify,
        name, age,identity_id,
        phone,address, password,
        head_picture,nick,operator_id,
        village_id
    </sql>

    <insert id="insert" parameterType="com.kdb.model.User" >
        insert into user (
        <include refid="allColumns"/>
        )VALUES (
        #{id} , #{gmtCreate} , #{gmtModify},
        #{name} , #{age} , #{identityId} ,
        #{phone} , #{address} , #{password} ,
        #{headPicture} , #{nick} , #{operatorId},
        #{villageId}
        )
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT last_insert_id() as id
        </selectKey>
    </insert>

    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE from user
        <where>
            id = #{id}
        </where>
    </delete>

    <update id="update" parameterType="com.kdb.model.User">
        update user
        <set>
            <if test="gmtCreate !=null">
                gmt_create = #{gmtCreate},
            </if>
            <if test="gmtModify !=null">
                gmt_modify = #{gmtModify},
            </if>
            <if test="name !=null">
                name = #{name},
            </if>
            <if test="age !=null">
                age = #{age},
            </if>
            <if test="identityId !=null">
                identity_id = #{identityId},
            </if>
            <if test="phone !=null">
                phone = #{phone},
            </if>
            <if test="address !=null">
                address = #{address},
            </if>
            <if test="password !=null">
                password = #{password},
            </if>
            <if test="headPicture !=null">
                head_picture = #{headPicture},
            </if>
            <if test="nick !=null">
                nick = #{nick},
            </if>
            <if test="operatorId !=null">
                operator_id = #{operatorId},
            </if>
            <if test="villageId !=null">
                village_id = #{villageId},
            </if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <select id="getByCondition" parameterType="java.util.Map" resultMap="User">
        SELECT <include refid="allColumns" />
        FROM user
        <where>
            <foreach collection="_where_key" item="andList" separator="or" open="(" close=")">
                <foreach collection="andList" item="filter" open="(" close=")" separator="and" >
                    <choose>
                        <when test="filter.LT()">
                            <![CDATA[
              ${filter.column} < #{filter.value}
              ]]>
                        </when>
                        <when test="filter.LE()">
                            <![CDATA[
              ${filter.column} <= #{filter.value}
              ]]>
                        </when>
                        <when test="filter.GT()">
                            <![CDATA[
              ${filter.column} > #{filter.value}
              ]]>
                        </when>
                        <when test="filter.GE()">
                            <![CDATA[
              ${filter.column} >= #{filter.value}
              ]]>
                        </when>
                        <when test="filter.EQ()">
                            <![CDATA[
              ${filter.column} = #{filter.value}
              ]]>
                        </when>
                        <when test="filter.LIKE()">
                            <![CDATA[
              ${filter.column} LIKE #{filter.value}
              ]]>
                        </when>
                    </choose>
                </foreach>
            </foreach>
        </where>
        <if test="_order_map_list != null">
            <trim prefix="order by " suffix=" " suffixOverrides=",">
                <foreach collection="_order_map_list" item="orderMap" index="index" separator=" ">
                    <if test="orderMap._asc_ !=null">
                        ${orderMap._column_name} ASC ,
                    </if>
                    <if test="orderMap._desc_ !=null">
                        ${orderMap._column_name} DESC ,
                    </if>
                </foreach>
            </trim>
        </if>
        <if test="_limit_offset !=null and _limit_total !=null ">
            LIMIT ${_limit_offset} , ${_limit_total}
        </if>
    </select>


</mapper>