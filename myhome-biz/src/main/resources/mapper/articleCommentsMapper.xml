<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kdb.dao.mapper.ArticleCommentsMapper">

        <resultMap id="ArticleComments" type="com.kdb.model.ArticleComments">
                <result column="id" property="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
                <result column="gmt_create" property="gmtCreate" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
                <result column="gmt_modify" property="gmtModify" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
                <result column="article_id" property="articleId" javaType="java.lang.Long" jdbcType="BIGINT"/>
                <result column="sequence" property="sequence" javaType="java.lang.Integer" jdbcType="INTEGER"/>
                <result column="content" property="content" javaType="java.lang.String" jdbcType="VARCHAR"/>
                <result column="author_id" property="authorId" javaType="java.lang.Long" jdbcType="BIGINT"/>
                <result column="author_name" property="authorName" javaType="java.lang.String" jdbcType="VARCHAR"/>
                <result column="to_author_id" property="toAuthorId" javaType="java.lang.Long" jdbcType="BIGINT"/>
                <result column="to_author_name" property="toAuthorName" javaType="java.lang.String" jdbcType="VARCHAR"/>
                <result column="to_sequence" property="toSequence" javaType="java.lang.Integer" jdbcType="INTEGER"/>
                <result column="type" property="type" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        </resultMap>

        <sql id="allColumns">
                id , gmt_create , gmt_modify ,
                article_id , sequence ,content ,
                author_id , author_name , to_author_id,
                to_author_name , to_sequence ,type
        </sql>

        <insert id="insert" parameterType="com.kdb.model.ArticleComments">
                insert into article_comments (
                  <include refid="allColumns"/>
                ) VALUES (
                  #{id} , #{gmtCreate} , #{gmtModify} ,
                #{articleId} , #{sequence} , #{content} ,
                #{authorId} , #{authorName} , #{toAuthorId} ,
                #{toAuthorName} , #{toSequence},#{type}
                )
            <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
                SELECT last_insert_id() as id
            </selectKey>
        </insert>

        <delete id="deleteById" parameterType="java.lang.Long" >
                delete from article_comments
                <where>
                        id = #{id}
                </where>
        </delete>

        <update id="update" parameterType="com.kdb.model.ArticleComments">
                update article_comments
                <set>
                       <if test="gmtCreate!=null" >
                               gmt_create = #{gmtCreate},
                       </if>
                        <if test="gmtModify!=null" >
                                gmt_modify = #{gmtModify},
                        </if>
                        <if test="articleId!=null" >
                                article_id = #{articleId},
                        </if>
                        <if test="sequence!=null" >
                                sequence = #{sequence},
                        </if>
                        <if test="content!=null" >
                                content = #{content},
                        </if>
                        <if test="authorId!=null" >
                                author_id = #{authorId},
                        </if>
                        <if test="authorName!=null" >
                                author_name = #{authorName},
                        </if>
                        <if test="toAuthorId!=null" >
                                to_author_id = #{toAuthorId},
                        </if>
                        <if test="toAuthorName!=null" >
                                to_author_name = #{toAuthorName},
                        </if>
                        <if test="toSequence!=null" >
                                to_sequence = #{toSequence},
                        </if>
                        <if test="type!=null" >
                                type = #{type},
                        </if>
                </set>
                <where>
                        id = #{id}
                </where>
        </update>

        <select id="getByCondition" parameterType="java.util.Map" resultMap="ArticleComments">
                SELECT
                <include refid="allColumns"/>
                FROM article_comments
            <if test="_where_key != null">
                <where>
                    <foreach collection="_where_key" item="andList" separator="or" open="(" close=")">
                        <foreach collection="andList" item="filter" open="(" close=")" separator="and">
                            <choose>
                                <when test="filter.LT()">
                                    <![CDATA[
              ${filter.column} < #{filter.value}
              ]]>
                                </when>
                                <when test="filter.LE()">
                                    <![CDATA[
              ${filter.column} <= #{filter.value}
              ]]>
                                </when>
                                <when test="filter.GT()">
                                    <![CDATA[
              ${filter.column} > #{filter.value}
              ]]>
                                </when>
                                <when test="filter.GE()">
                                    <![CDATA[
              ${filter.column} >= #{filter.value}
              ]]>
                                </when>
                                <when test="filter.EQ()">
                                    <![CDATA[
              ${filter.column} = #{filter.value}
              ]]>
                                </when>
                                <when test="filter.LIKE()">
                                    <![CDATA[
              ${filter.column} LIKE #{filter.value}
              ]]>
                                </when>
                            </choose>
                        </foreach>
                    </foreach>
                </where>
            </if>
                <if test="_order_map_list != null">
                        <trim prefix="order by " suffix=" " suffixOverrides=",">
                                <foreach collection="_order_map_list" item="orderMap" index="index" separator=" ">
                                        <if test="orderMap._asc_ !=null">
                                                ${orderMap._column_name} ASC ,
                                        </if>
                                        <if test="orderMap._desc_ !=null">
                                                ${orderMap._column_name} DESC ,
                                        </if>
                                </foreach>
                        </trim>
                </if>
                <if test="_limit_offset !=null and _limit_total !=null ">
                        LIMIT ${_limit_offset} , ${_limit_total}
                </if>
        </select>

</mapper>