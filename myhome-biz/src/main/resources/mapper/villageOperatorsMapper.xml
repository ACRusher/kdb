<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kdb.dao.mapper.VillageOperatorsMapper">

    <resultMap id="VillageOperators" type="com.kdb.model.VillageOperators">
        <result column="id" property="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
        <result column="gmt_create" property="gmtCreate" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result column="gmt_modify" property="gmtModify" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result column="village_id" property="villageId" javaType="java.lang.Long" jdbcType="BIGINT"/>
        <result column="operator_id" property="operatorId" javaType="java.lang.Long" jdbcType="BIGINT"/>
        <result column="star" property="star" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="speed" property="speed" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="service" property="service" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="stable" property="stable" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="upload" property="upload" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="download" property="download" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="ping" property="ping" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="comment_count" property="commentCount" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result column="speed_count" property="speedCount" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result column="likes" property="likes" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result column="complaint" property="complaint" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="allColumns" >
        id ,gmt_create , gmt_modify ,
        village_id ,operator_id ,star ,
        speed , service ,stable,
        upload ,download ,ping ,
        comment_count ,speed_count , likes,
        complaint
    </sql>

    <insert id="insert" parameterType="com.kdb.model.VillageOperators">
        INSERT INTO village_operators (
        <include refid="allColumns"/>
        )VALUES (
        #{id} , #{gmtCreate} ,#{gmtModify} ,
        #{villageId} , #{operatorId} , #{star},
        #{speed} , #{service} ,#{stable} ,
        #{upload} ,#{download} ,#{ping},
        #{commentCount} ,#{speedCount} ,#{likes},
        #{complaint}
        )
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT last_insert_id() as id
        </selectKey>
    </insert>

    <update id="update" parameterType="com.kdb.model.VillageOperators">
        UPDATE village_operators
        <set>
            <if test="gmtCreate!=null">
                gmt_create = #{gmtCreate} ,
            </if>
            <if test="gmtModify!=null">
                gmt_modify = #{gmtModify} ,
            </if>
            <if test="villageId!=null">
                village_id = #{villageId},
            </if>
            <if test="operatorId!=null">
                operator_id = #{operatorId},
            </if>
            <if test="star!=null">
                star = #{star},
            </if>
            <if test="speed!=null">
                speed = #{speed},
            </if>
            <if test="service!=null">
                service = #{service},
            </if>
            <if test="stable!=null">
                stable = #{stable},
            </if>
            <if test="upload!=null">
                upload = #{upload},
            </if>
            <if test="download!=null">
                download = #{download},
            </if>
            <if test="ping!=null">
                ping = #{ping},
            </if>
            <if test="commentCount!=null">
                comment_count = #{commentCount},
            </if>
            <if test="speedCount!=null">
                speed_count = #{speedCount},
            </if>
            <if test="likes!=null">
                likes = #{likes},
            </if>
            <if test="complaint!=null">
                complaint = #{complaint},
            </if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="deleteById" parameterType="java.lang.Long" >
        delete from village_operators
        <where>
            id = #{id}
        </where>
    </delete>


    <select id="getByCondition" parameterType="java.util.Map" resultMap="VillageOperators">
                SELECT
                <include refid="allColumns"/>
                FROM village_operators
                <where>
                        <foreach collection="_where_key" item="andList" separator="or" open="(" close=")">
                                <foreach collection="andList" item="filter" open="(" close=")" separator="and">
                                        <choose>
                                                <when test="filter.LT()">
                                                        <![CDATA[
              ${filter.column} < #{filter.value}
              ]]>
                                                </when>
                                                <when test="filter.LE()">
                                                        <![CDATA[
              ${filter.column} <= #{filter.value}
              ]]>
                                                </when>
                                                <when test="filter.GT()">
                                                        <![CDATA[
              ${filter.column} > #{filter.value}
              ]]>
                                                </when>
                                                <when test="filter.GE()">
                                                        <![CDATA[
              ${filter.column} >= #{filter.value}
              ]]>
                                                </when>
                                                <when test="filter.EQ()">
                                                        <![CDATA[
              ${filter.column} = #{filter.value}
              ]]>
                                                </when>
                                                <when test="filter.LIKE()">
                                                        <![CDATA[
              ${filter.column} LIKE #{filter.value}
              ]]>
                                                </when>
                                        </choose>
                                </foreach>
                        </foreach>
                </where>
                <if test="_order_map_list != null">
                        <trim prefix="order by " suffix=" " suffixOverrides=",">
                                <foreach collection="_order_map_list" item="orderMap" index="index" separator=" ">
                                        <if test="orderMap._asc_ !=null">
                                                ${orderMap._column_name} ASC ,
                                        </if>
                                        <if test="orderMap._desc_ !=null">
                                                ${orderMap._column_name} DESC ,
                                        </if>
                                </foreach>
                        </trim>
                </if>
                <if test="_limit_offset !=null and _limit_total !=null ">
                        LIMIT ${_limit_offset} , ${_limit_total}
                </if>
        </select>

</mapper>